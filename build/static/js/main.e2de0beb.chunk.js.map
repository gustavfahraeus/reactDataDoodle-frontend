{"version":3,"sources":["components/SongContainer.js","components/GenreContainer.js","components/ArtistContainer.js","components/RecentlyPlayedContainer.js","components/HomeContainer.js","components/AboutContainer.js","index.js"],"names":["SongContainer","props","textWidth","window","innerWidth","data","className","ranking","src","style","width","GenreContainer","useState","colStyle","setColStyle","amountImages","setAmountImages","handleResize","gridTemplateColumns","paddingLeft","paddingRight","error","console","log","useEffect","addEventListener","genreName","genreArtistsAndImages","images","i","length","push","result","document","getElementsByClassName","setTimeout","opacity","display","alignContent","justifyContent","flexDirection","textAlign","str","splitStr","toLowerCase","split","charAt","toUpperCase","substring","join","titleCase","Array","map","_","ArtistContainer","margin","RecentlyPlayedContainer","maxWidth","fontSize","borderRight","id","wordWrap","minWidth","marginLeft","HomeContainer","changeUpperState","stateProps","marginTop","marginBottom","onClick","paddingBottom","require","AboutContainer","target","href","color","fontWeight","cursor","paddingTop","spotifyAPI","App","dataObject","setDataObject","myParam","URLSearchParams","location","search","get","setAccessToken","setter","myDataObject","combinedTracksState","getMe","then","response","today","Date","getMyTopTracks","limit","time_range","trackNames","body","items","item","name","artistNames","artists","imageURLs","album","url","newState","catch","combinedArtistState","getMyTopArtists","aggregatedGenres","topGenresDescending","genresAndScores","genresAndArtists","artistGenres","genres","j","specficGenre","genre","sort","a","b","fetch","method","headers","JSON","stringify","getMyRecentlyPlayedTracks","trackName","track","timeData","played_at","date","slice","time","handleData","SpotifyDataComponent","animation","role","currentCategory","setCurrentCategory","currentTimeInterval","setCurrentTimeInterval","focusedTimeContainer","borderRadius","borderTop","borderColor","height","backgroundColor","decideIntervalStyle","focusedIntervalContainer","border","borderBottom","userSelect","checkWidth","getElementById","Math","floor","scrollY","innerHeight","assignCSS","loggedIn","renderCategory","scrollTo","ReactDOM","render"],"mappings":"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","file":"static/js/main.e2de0beb.chunk.js","sourcesContent":["function SongContainer(props) {\r\n    const textWidth = (window.innerWidth - 80) / 2 - 10\r\n    if (props.data) {\r\n        return (\r\n            <div className=\"SongContainer\">\r\n                <p className=\"songPersonalRanking\">{props.ranking + 1}</p>\r\n                <img className=\"songImage\" src={props.data[2]}></img>\r\n                <p className=\"songTitle\" style={{ width: textWidth }}>{props.data[0]}</p>\r\n                <p className=\"albumTitle\" style={{ width: textWidth }}>{props.data[1]}</p>\r\n            </div>\r\n        )\r\n    }\r\n    return (<div></div>)\r\n}\r\n\r\nexport default SongContainer;","import { useEffect, useState } from \"react\";\r\n\r\nfunction GenreContainer(props) {\r\n    const [colStyle, setColStyle] = useState({})\r\n    const [amountImages, setAmountImages] = useState(0)\r\n\r\n\r\n    const handleResize = () => {\r\n        try {\r\n            if (window.innerWidth < 768 && amountImages === 1) {\r\n                let newStyle = { gridTemplateColumns: '75px', paddingLeft: '75px', paddingRight: '75px' }\r\n                setColStyle(newStyle)\r\n            }\r\n\r\n            else if (window.innerWidth < 768 && amountImages === 2) {\r\n                let newStyle = { gridTemplateColumns: 'repeat(2,75px)', paddingLeft: '37.5px', paddingRight: '37.5px' }\r\n                setColStyle(newStyle)\r\n            }\r\n\r\n            else if (window.innerWidth < 768 && amountImages >= 3) {\r\n                let newStyle = { gridTemplateColumns: 'repeat(3,75px)' }\r\n                setColStyle(newStyle)\r\n            }\r\n\r\n            else if (window.innerWidth >= 768 && amountImages === 1) {\r\n                let newStyle = { gridTemplateColumns: '150px', paddingLeft: '150px', paddingRight: '150px' }\r\n                setColStyle(newStyle)\r\n            }\r\n\r\n            else if (window.innerWidth >= 768 && amountImages === 2) {\r\n                let newStyle = { gridTemplateColumns: 'repeat(2,150px)', paddingLeft: '75px', paddingRight: '75px' }\r\n                setColStyle(newStyle)\r\n            }\r\n\r\n            else if (window.innerWidth >= 768 && amountImages >= 3) {\r\n                let newStyle = { gridTemplateColumns: 'repeat(3,150px)' }\r\n                setColStyle(newStyle)\r\n            }\r\n\r\n        }\r\n        catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleResize)\r\n    \r\n    }, [])\r\n\r\n    useEffect(handleResize, [amountImages])\r\n\r\n\r\n\r\n    function titleCase(str) {\r\n        let splitStr = str.toLowerCase().split(' ');\r\n        for (var i = 0; i < splitStr.length; i++)\r\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\r\n        return splitStr.join(' ');\r\n    }\r\n\r\n    let genreName = props.data ? props.data[0] : ''\r\n    let genreArtistsAndImages = props.data ? props.data[1][0] : []\r\n\r\n    let images = []\r\n    for (let i = 0; i < genreArtistsAndImages.length; i++) images.push(genreArtistsAndImages[i][1])\r\n    if (images.length !== amountImages) {\r\n        setAmountImages(images.length)\r\n    }\r\n\r\n    try {\r\n        let result = document.getElementsByClassName(\"containingGenres\")\r\n        setTimeout(() => result[0].style.opacity = 1, 0)\r\n    }\r\n    catch {}\r\n\r\n\r\n    return (\r\n        <div className=\"GenreContainer\">\r\n\r\n            <div style={{ display: 'flex', alignContent: 'center', justifyContent: 'center', flexDirection: 'column', textAlign: 'center' }}>\r\n                <p className=\"genreName\">{props.ranking + 1}</p>\r\n                <p className='genreName'>{titleCase(genreName)}</p>\r\n            </div>\r\n\r\n            <div className=\"genreArtistImageContainer\" style={colStyle}>\r\n                {[...Array(images.length)].map((_, i) =>\r\n                    <img className='artistImageGenreContainer' src={images[i]}></img>\r\n                )}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreContainer;","function ArtistContainer(props) {\r\n    return (\r\n        <div style={{ display: 'flex', margin: 'auto'}}>\r\n            <div className=\"ArtistContainer\">\r\n                <img className=\"artistImage\" src={props.data[props.ranking][1]}></img>\r\n                <div>\r\n                    <p className=\"artistRanking\">{props.ranking + 1 + '. ' + props.data[props.ranking][0]}  </p>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtistContainer;","function RecentlyPlayedContainer(props) {\r\n    return (\r\n        <div className=\"RecentlyPlayedContainer\">\r\n            <div style={{ display: 'flex', textAlign: 'left' }}>\r\n                <p className=\"recentlyPlayedCategory\" style={{ maxWidth: '450px', paddingLeft: '4px', fontSize: '20px' }}>Track</p>\r\n                <p className=\"recentlyPlayedCategory\" style={{ maxWidth: '450px', paddingLeft: '4px', fontSize: '20px' }}>Artist(s)</p>\r\n                <p className=\"recentlyPlayedCategory\" style={{ maxWidth: '125px', paddingLeft: '4px', fontSize: '20px', borderRight: '1px solid black' }}>Played at</p>\r\n            </div>\r\n\r\n            <div style={{display: 'grid'}}>\r\n                {[...Array(props.data.length)].map((_, i) => <div className=\"someShit\" >\r\n                    <p id={ i === 0 ? 'topRecent' : ''} className = 'recentlyPlayedData' style={{ wordWrap: 'break-word', maxWidth: '450px', minWidth: '33%', marginLeft: '4px'}}>{props.data[i][0]}</p>\r\n                    <p id={ i === 0 ? 'topRecent' : ''} className = 'recentlyPlayedData' style={{ wordWrap: 'break-word', maxWidth: '450px', minWidth: '33%'}}>{props.data[i][1]}</p>\r\n                    <p id={ i === 0 ? 'topRecent' : ''} className = 'recentlyPlayedData' style={{ wordWrap: 'break-word', maxWidth: '125px', minWidth: '33%'}}>{props.data[i][2]}</p>\r\n                </div>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecentlyPlayedContainer;","function HomeContainer(props) {\r\n    const changeUpperState = props.stateProps\r\n    \r\n  \r\n    return (\r\n        <div className='HomeContainer'>\r\n\r\n            <p style={{marginTop: '5px', marginBottom: '10px'}}>your spotify data - all in one place</p>\r\n\r\n            <div className='buttonContainer'>\r\n                <button className='button button1' onClick={() => changeUpperState('Top Tracks')}>My Top Tracks</button>\r\n            </div>\r\n            <div className='buttonContainer'>\r\n                <button className='button button2' onClick={() => changeUpperState('Top Artists')}>My Top Artists</button>\r\n            </div>\r\n            <div className='buttonContainer'>\r\n                <button className='button button3' onClick={() => changeUpperState('Top Genres')}>My Top Genres</button>\r\n            </div>\r\n            <div className='buttonContainer'>\r\n                <button className='button button4' onClick={() => changeUpperState('Recently Played Tracks')}>My Recently Played Tracks</button>\r\n            </div>\r\n            <div className='buttonContainer'>\r\n                <button className='button button5' onClick={() => changeUpperState('About')} style={{paddingBottom: '0px'}}>About</button>\r\n            </div>\r\n        </div>\r\n        \r\n    )}\r\n\r\nexport default HomeContainer;","const SpotifyWebApi = require('spotify-web-api-node')\r\nconst spotifyAPI = new SpotifyWebApi()\r\n\r\nfunction AboutContainer(props) {\r\n\r\n    let deleteMyEntry = () => {\r\n\r\n       \r\n        fetch('http://127.0.0.1:5000/helloworld', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(props.data)\r\n        }).then( response => {\r\n            if (response.status === 200) \r\n                alert(\"Successfully deleted all traces of you.\")\r\n        \r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='AboutContainer'>\r\n            <p className=\"aboutHeader\">Hi there!😌</p>\r\n            <p className=\"aboutParagraph\">This is a project I built to learn the ropes of React and to have an aggregated & good looking place to look at some of my own Spotify stats.</p>\r\n            <p className=\"aboutParagraph\">If you find the website to be buggy in any way please send me a message on <a target=\"_blank\"  href=\"https://twitter.com/flushthefishes\" style={{display: 'inline',color: \"#00acee\", fontWeight: '900', fontSize: '16px', cursor: 'pointer'}}>Twitter</a>.</p>\r\n            <p className=\"aboutParagraph\" style={{paddingTop: '10px'}}>My intention is to extend this project to be able to visualize more time periods, more user specific data, and also\r\n             to make some (hopefully) useful predicitions about other cool things. </p>\r\n             <p className=\"aboutParagraph\" style={{paddingTop: '10px'}}>If you are at all interested in the code you can find it <a target=\"_blank\"  href=\"https://github.com/gustavfahraeus\" style={{display: 'inline',color: \"#00acee\", fontWeight: '900', fontSize: '16px', cursor: 'pointer'}}>here</a>.</p>\r\n             <p className=\"aboutEnding\" style={{paddingTop: '10px'}}>Peace and Love</p>\r\n        </div>\r\n        \r\n    )}\r\n\r\nexport default AboutContainer;","import React, { useState, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport * as ReactBootStrap from 'react-bootstrap'\r\n\r\n\r\nimport './css/index.css'\r\nimport './css/genres.css'\r\nimport './css/ArtistContainer.css'\r\nimport './css/HomeContainer.css'\r\nimport './css/SongContainer.css'\r\nimport './css/AboutContainer.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport SongContainer from './components/SongContainer.js'\r\nimport GenreContainer from './components/GenreContainer.js'\r\nimport ArtistContainer from './components/ArtistContainer.js'\r\nimport RecentlyPlayedContainer from './components/RecentlyPlayedContainer.js'\r\nimport HomeContainer from './components/HomeContainer.js'\r\nimport AboutContainer from './components/AboutContainer.js'\r\n\r\nconst SpotifyWebApi = require('spotify-web-api-node')\r\nconst spotifyAPI = new SpotifyWebApi()\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n    const [dataObject, setDataObject] = useState('')\r\n    const myParam = new URLSearchParams(window.location.search).get('access_token')\r\n    if (!myParam) window.location.href = \"https://serene-temple-40989.herokuapp.com/login\"\r\n    spotifyAPI.setAccessToken(myParam)\r\n    if (!dataObject) handleData(setDataObject)\r\n\r\n    return (dataObject ? <SpotifyDataComponent data={dataObject} /> : \r\n    \r\n     <div className=\"spinnerContainer\">\r\n        <ReactBootStrap.Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </ReactBootStrap.Spinner>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n/* Holding everything relating to the Spotify data we fetch */\r\nfunction SpotifyDataComponent(props) {\r\n    const [currentCategory, setCurrentCategory] = useState('Home')\r\n    const [currentTimeInterval, setCurrentTimeInterval] = useState(0)\r\n    console.log(props.data['__id'])\r\n\r\n\r\n    // TODO: Fetch all time interals at the same time.\r\n    // const [personalTopTracks, setpersonalTopTracks] = usePersonalTopTracks(currentTimeInterval)\r\n    // const [personalTopArtists, setPersonalTopArtists] = usePersonalTopArtist(currentTimeInterval)\r\n    // const [personalTopGenres, setPersonalTopGenres] = usePersonalTopGenres(currentTimeInterval)\r\n    // const [recentlyPlayed, setRecentlyPlayed] = useRecentlyPlayed()\r\n\r\n    function renderCategory(currentCategory) {\r\n        switch (currentCategory) {\r\n            case 'Top Tracks': return [...Array(props.data['tracks'][currentTimeInterval].length)].map((_, i) => <SongContainer ranking={i} data={props.data['tracks'][currentTimeInterval][i]} />)\r\n            case 'Top Artists': return [...Array(props.data['artists'][currentTimeInterval].length)].map((_, i) => <ArtistContainer ranking={i} data={props.data['artists'][currentTimeInterval]} />)\r\n            case 'Top Genres': return [...Array(props.data['genres'][currentTimeInterval].length)].map((_, i) => <GenreContainer ranking={i} data={props.data['genres'][currentTimeInterval][i]} />)\r\n            case 'Recently Played Tracks': return <RecentlyPlayedContainer data={props.data['recentlyPlayed']} />\r\n            case 'Home': return <HomeContainer stateProps={setCurrentCategory} loggedIn={props} />\r\n            case 'About': return <AboutContainer data={props.data} />\r\n        }\r\n    }\r\n\r\n    function assignCSS(currentCategory) {\r\n        switch (currentCategory) {\r\n            case \"Top Artists\": return 'dataContainer'\r\n            case 'Top Genres': return 'containingGenres'\r\n            default: return 'containingGenres'\r\n        }\r\n    }\r\n\r\n    let focusedTimeContainer = {\r\n        borderRadius: \"5px 5px 5px 5px\",\r\n        borderTop: 'none',\r\n        borderColor: '#121212',\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        height: '100%'\r\n        , backgroundColor: 'rgba(133, 127, 114, 0.44)', color: 'white', cursor: 'default', userSelect: 'none'\r\n    }\r\n\r\n\r\n    let decideIntervalStyle = () => {\r\n\r\n        let focusedIntervalContainer = {\r\n            border: \"1px solid black\",\r\n            borderBottom: \"none\",\r\n            borderRadius: \"5px 5px 5px 5px\",\r\n            borderColor: '#121212',\r\n            fontWeight: 'bold',\r\n            height: '24px',\r\n            userSelect: 'none'\r\n        }\r\n\r\n        switch (currentCategory) {\r\n            case 'Top Tracks': {\r\n                focusedIntervalContainer = { ...focusedIntervalContainer, color: '#984447' }\r\n                break;\r\n            }\r\n            case 'Top Artists': {\r\n                focusedIntervalContainer = { ...focusedIntervalContainer, color: '#468C98' }\r\n                break;\r\n            }\r\n            case 'Top Genres': {\r\n                focusedIntervalContainer = { ...focusedIntervalContainer, color: '#476C9B' }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return focusedIntervalContainer\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkWidth()\r\n    })\r\n\r\n    let checkWidth = () => {\r\n        if (currentCategory === \"Top Artists\" && document.getElementById('artistContainer') && window.innerWidth < 992 && window.innerWidth >= 576) {\r\n            document.getElementById(\"artistContainer\").style.height = 250 * (Math.floor(props.data['artists'][currentTimeInterval].length / 3) + 1) + \"px\"\r\n        }\r\n\r\n        else if (currentCategory === \"Top Artists\" && document.getElementById('artistContainer') && window.innerWidth >= 992) {\r\n            document.getElementById(\"artistContainer\").style.height = 400 * (Math.floor(props.data['artists'][currentTimeInterval].length / 3) + 1) + \"px\"\r\n        }\r\n\r\n        else if (currentCategory === \"Top Artists\" && document.getElementById('artistContainer') && window.innerWidth < 576) {\r\n            document.getElementById(\"artistContainer\").style.height = 185 * (Math.floor(props.data['artists'][currentTimeInterval].length / 3) + 1) + \"px\"\r\n        }\r\n    }\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n        if (currentCategory === \"Top Artists\" && document.getElementById('artistContainer') && window.innerWidth < 992 && window.innerWidth >= 576) {\r\n            document.getElementById(\"artistContainer\").style.height = 250 * (Math.floor(props.data['artists'][currentTimeInterval].length / 3)) + \"px\"\r\n        }\r\n\r\n        else if (currentCategory === \"Top Artists\" && document.getElementById('artistContainer') && window.innerWidth >= 992) {\r\n            document.getElementById(\"artistContainer\").style.height = 400 * (Math.floor(props.data['artists'][currentTimeInterval].length / 3) + 1) + \"px\"\r\n        }\r\n\r\n        else if (currentCategory === \"Top Artists\" && document.getElementById('artistContainer') && window.innerWidth < 576) {\r\n            document.getElementById(\"artistContainer\").style.height = 185 * (Math.floor(props.data['artists'][currentTimeInterval].length / 3) + 1) + \"px\"\r\n        }\r\n    })\r\n\r\n    window.addEventListener('scroll', () => {\r\n        if (window.scrollY > window.innerHeight && currentCategory === \"Top Genres\") {\r\n            document.getElementsByClassName('scrollToTheTop')[0].style.opacity = '1'\r\n            document.getElementsByClassName('scrollToTheTop')[0].style.cursor = 'pointer'\r\n        }\r\n        else {\r\n            document.getElementsByClassName('scrollToTheTop')[0].style.opacity = '0'\r\n            document.getElementsByClassName('scrollToTheTop')[0].style.cursor = 'unset'\r\n        }\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"SpotifyDataComponent\">\r\n\r\n            <div className=\"header\" style={currentCategory === 'Home' ? { display: 'none' } : { borderBottom: 'none' }}>\r\n                <div className=\"headerElement\"\r\n                    onClick={() => setCurrentCategory('Home')}\r\n                    style={currentCategory === 'Home' ? focusedTimeContainer : { color: \"rgba(255,255,255, 0.44\" }}>\r\n                    Home\r\n                </div>\r\n                <div\r\n                    className=\"headerElement\"\r\n                    onClick={() => { setCurrentCategory('Top Tracks') }}\r\n                    style={currentCategory === 'Top Tracks' ? focusedTimeContainer : { color: \"rgba(255,255,255, 0.44)\" }}>\r\n                    Top Tracks\r\n                </div>\r\n                <div\r\n                    className=\"headerElement\"\r\n                    onClick={() => { setCurrentCategory('Top Artists') }}\r\n                    style={currentCategory === 'Top Artists' ? focusedTimeContainer : { color: \"rgba(255,255,255, 0.44)\" }}>\r\n                    Top Artists\r\n                </div>\r\n                <div\r\n                    className=\"headerElement\"\r\n                    onClick={() => { setCurrentCategory('Top Genres') }}\r\n                    style={currentCategory === 'Top Genres' ? focusedTimeContainer : { color: \"rgba(255,255,255, 0.44)\" }}>\r\n                    Top Genres\r\n                </div>\r\n                <div\r\n                    className=\"headerElement\"\r\n                    onClick={() => { setCurrentCategory('Recently Played Tracks') }}\r\n                    style={currentCategory === 'Recently Played Tracks' ? focusedTimeContainer : { color: \"rgba(255,255,255, 0.44)\" }}>\r\n                    Recently Played Tracks\r\n                </div>\r\n                {/* <div\r\n                    className=\"headerElement\"\r\n                    onClick={() => { setCurrentCategory('Your Account') }}\r\n                    style={currentCategory === 'Your Account' ? focusedTimeContainer : {}}>\r\n                    Your Account\r\n                </div> */}\r\n                <div\r\n                    className=\"headerElement\"\r\n                    onClick={() => { setCurrentCategory('About') }}\r\n                    style={currentCategory === 'About' ? focusedTimeContainer : { color: \"rgba(255,255,255, 0.44)\" }}>\r\n                    About\r\n                </div>\r\n            </div>\r\n\r\n            <p id=\"currentCategory\">{currentCategory === 'Home' ? 'What are you interested in seeing?' : currentCategory === 'About' ? '' : currentCategory}</p>\r\n\r\n            <div id=\"timeIntervalChanger\" style={currentCategory === 'Recently Played Tracks' || currentCategory === 'Home' || currentCategory === 'About' ? { display: 'none' } : {}}>\r\n                <div style={currentTimeInterval === 0 ? decideIntervalStyle() : { color: '#CAE4F1' }} className={currentTimeInterval !== 0 ? 'changerDiv' : 'focused'} onClick={() => { setCurrentTimeInterval(0) }}>last 4 weeks</div>\r\n                <div style={currentTimeInterval === 1 ? decideIntervalStyle() : { color: '#CAE4F1' }} className={currentTimeInterval !== 1 ? 'changerDiv' : 'focused'} onClick={() => { setCurrentTimeInterval(1) }}>last 6 months</div>\r\n                <div style={currentTimeInterval === 2 ? decideIntervalStyle() : { color: '#CAE4F1' }} className={currentTimeInterval !== 2 ? 'changerDiv' : 'focused'} onClick={() => { setCurrentTimeInterval(2) }}>years back</div>\r\n            </div>\r\n\r\n            <div id={currentCategory === \"Top Artists\" ? \"artistContainer\" : ''} className={assignCSS(currentCategory)} style={currentCategory !== 'Top Artists' && currentCategory === 'Top Genres' ? { height: 'unset', opacity: '0' } : currentCategory !== 'Top Artists' ? { height: 'unset' } : {}}>\r\n                {props.data['__id'] ? renderCategory(currentCategory) : ''}\r\n                <div onClick={() => { window.scrollTo(0, 0); }} className=\"scrollToTheTop\">&#8593;</div>\r\n            </div>\r\n\r\n            <div style={currentCategory !== 'Home' && currentCategory !== \"Top Genres\" ? { width: \"100%\", height: \"20px\", borderTop: \"1px solid #1F1B24\", marginTop: '10px' } : {}}></div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n// This looks disgusting right now, but basically what we are doing is getting all\r\n// the data in all the different categories that we need, and then we set the appropriate\r\n// state. So the state only changes once when the site loads, and then on refresh i guess.\r\n// !! I saw that some entries being uploaded to the database were missing some property,\r\n//  I think that the reason is that the promises do not necessary resolve in the same \r\n// order that they are done in. I think I remember that I once used something that waited\r\n// for all promises to resolve. \r\nfunction handleData(setter) {\r\n    let myDataObject = {}\r\n    let combinedTracksState = []\r\n\r\n\r\n    spotifyAPI.getMe().then(response => myDataObject['__id'] = response['body']['id'])\r\n\r\n    let today = new Date();\r\n    myDataObject['uploadDate'] = today\r\n\r\n    spotifyAPI.getMyTopTracks({ limit: '50', time_range: 'short_term' }).then(\r\n        (response) => {\r\n            let trackNames = response.body.items.map((item) => item.name)\r\n            let artistNames = response.body.items.map((item) => item.artists[0].name)\r\n            let imageURLs = response.body.items.map((item) => item.album.images[2].url)\r\n            let newState = trackNames.map((item, i) => [item, artistNames[i], imageURLs[i]])\r\n            combinedTracksState = [...combinedTracksState, newState]\r\n        }).catch(() => window.location.href = \"https://serene-temple-40989.herokuapp.com/login\")\r\n    spotifyAPI.getMyTopTracks({ limit: '50', time_range: 'medium_term' }).then(\r\n        (response) => {\r\n            let trackNames = response.body.items.map((item) => item.name)\r\n            let artistNames = response.body.items.map((item) => item.artists[0].name)\r\n            let imageURLs = response.body.items.map((item) => item.album.images[2].url)\r\n            let newState = trackNames.map((item, i) => [item, artistNames[i], imageURLs[i]])\r\n            combinedTracksState = [...combinedTracksState, newState]\r\n        }).catch(() => window.location.href = \"https://serene-temple-40989.herokuapp.com/login\")\r\n    spotifyAPI.getMyTopTracks({ limit: '50', time_range: 'long_term' }).then(\r\n        (response) => {\r\n            let trackNames = response.body.items.map((item) => item.name)\r\n            let artistNames = response.body.items.map((item) => item.artists[0].name)\r\n            let imageURLs = response.body.items.map((item) => item.album.images[2].url)\r\n            let newState = trackNames.map((item, i) => [item, artistNames[i], imageURLs[i]])\r\n            combinedTracksState = [...combinedTracksState, newState]\r\n            myDataObject['tracks'] = combinedTracksState\r\n        }).catch(() => window.location.href = \"https://serene-temple-40989.herokuapp.com/login\")\r\n\r\n    let combinedArtistState = []\r\n    spotifyAPI.getMyTopArtists({ limit: '50', time_range: 'short_term' }).then(\r\n        (response) => {\r\n            let artistNames = response.body.items.map((item) => item.name)\r\n            let imageURLs = response.body.items.map((item) => item.images[1].url)\r\n            let newState = artistNames.map((item, i) => [item, imageURLs[i]])\r\n            combinedArtistState = [...combinedArtistState, newState]\r\n        }).catch(() => window.location.href = \"https://serene-temple-40989.herokuapp.com/login\")\r\n    spotifyAPI.getMyTopArtists({ limit: '50', time_range: 'medium_term' }).then(\r\n        (response) => {\r\n            let artistNames = response.body.items.map((item) => item.name)\r\n            let imageURLs = response.body.items.map((item) => item.images[1].url)\r\n            let newState = artistNames.map((item, i) => [item, imageURLs[i]])\r\n            combinedArtistState = [...combinedArtistState, newState]\r\n        }).catch(() => window.location.href = \"https://serene-temple-40989.herokuapp.com/login\")\r\n    spotifyAPI.getMyTopArtists({ limit: '50', time_range: 'long_term' }).then(\r\n        (response) => {\r\n            let artistNames = response.body.items.map((item) => item.name)\r\n            let imageURLs = response.body.items.map((item) => item.images[1].url)\r\n            let newState = artistNames.map((item, i) => [item, imageURLs[i]])\r\n            combinedArtistState = [...combinedArtistState, newState]\r\n            myDataObject['artists'] = combinedArtistState\r\n        }).catch(() => window.location.href = \"https://serene-temple-40989.herokuapp.com/login\")\r\n\r\n    let aggregatedGenres = []\r\n    spotifyAPI.getMyTopArtists({ limit: '50', time_range: 'short_term' }).then(\r\n        (response) => {\r\n            let topGenresDescending = []\r\n            let genresAndScores = {}\r\n            let genresAndArtists = {} // The value of genresAndArtists is an array containing the names and the imageURLs of the artists. Genre is the key.\r\n\r\n            for (let i = 0; i < response.body.items.length; i++) {\r\n                let artistGenres = response.body.items[i].genres\r\n                for (let j = 0; j < artistGenres.length; j++) {\r\n                    let specficGenre = artistGenres[j]\r\n                    if (specficGenre in genresAndScores) {\r\n                        genresAndScores[specficGenre]++\r\n                        genresAndArtists[specficGenre].push([response.body.items[i].name, response.body.items[i].images[2].url])\r\n                    }\r\n                    else {\r\n                        genresAndScores[specficGenre] = 1\r\n                        genresAndArtists[specficGenre] = [[response.body.items[i].name, response.body.items[i].images[2].url]]\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let genre in genresAndScores) topGenresDescending.push([genre, genresAndScores[genre]]);\r\n\r\n            topGenresDescending.sort((a, b) => b[1] - a[1])\r\n\r\n            for (let i = 0; i < topGenresDescending.length; i++) {\r\n                let genre = topGenresDescending[i][0]\r\n                topGenresDescending[i][1] = []\r\n                genresAndArtists[genre] ? topGenresDescending[i][1].push(genresAndArtists[genre]) : topGenresDescending[i][1] = [genresAndArtists[i][genre]]\r\n            }\r\n\r\n            aggregatedGenres = [...aggregatedGenres, topGenresDescending]\r\n        })\r\n    spotifyAPI.getMyTopArtists({ limit: '50', time_range: 'medium_term' }).then(\r\n        (response) => {\r\n            let topGenresDescending = []\r\n            let genresAndScores = {}\r\n            let genresAndArtists = {} // The value of genresAndArtists is an array containing the names and the imageURLs of the artists. Genre is the key.\r\n\r\n            for (let i = 0; i < response.body.items.length; i++) {\r\n                let artistGenres = response.body.items[i].genres\r\n                for (let j = 0; j < artistGenres.length; j++) {\r\n                    let specficGenre = artistGenres[j]\r\n                    if (specficGenre in genresAndScores) {\r\n                        genresAndScores[specficGenre]++\r\n                        genresAndArtists[specficGenre].push([response.body.items[i].name, response.body.items[i].images[2].url])\r\n                    }\r\n                    else {\r\n                        genresAndScores[specficGenre] = 1\r\n                        genresAndArtists[specficGenre] = [[response.body.items[i].name, response.body.items[i].images[2].url]]\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let genre in genresAndScores) topGenresDescending.push([genre, genresAndScores[genre]]);\r\n\r\n            topGenresDescending.sort((a, b) => b[1] - a[1])\r\n\r\n            for (let i = 0; i < topGenresDescending.length; i++) {\r\n                let genre = topGenresDescending[i][0]\r\n                topGenresDescending[i][1] = []\r\n                genresAndArtists[genre] ? topGenresDescending[i][1].push(genresAndArtists[genre]) : topGenresDescending[i][1] = [genresAndArtists[i][genre]]\r\n            }\r\n\r\n            aggregatedGenres = [...aggregatedGenres, topGenresDescending]\r\n        })\r\n    spotifyAPI.getMyTopArtists({ limit: '50', time_range: 'long_term' }).then(\r\n        (response) => {\r\n            let topGenresDescending = []\r\n            let genresAndScores = {}\r\n            let genresAndArtists = {} // The value of genresAndArtists is an array containing the names and the imageURLs of the artists. Genre is the key.\r\n\r\n            for (let i = 0; i < response.body.items.length; i++) {\r\n                let artistGenres = response.body.items[i].genres\r\n                for (let j = 0; j < artistGenres.length; j++) {\r\n                    let specficGenre = artistGenres[j]\r\n                    if (specficGenre in genresAndScores) {\r\n                        genresAndScores[specficGenre]++\r\n                        genresAndArtists[specficGenre].push([response.body.items[i].name, response.body.items[i].images[2].url])\r\n                    }\r\n                    else {\r\n                        genresAndScores[specficGenre] = 1\r\n                        genresAndArtists[specficGenre] = [[response.body.items[i].name, response.body.items[i].images[2].url]]\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let genre in genresAndScores) topGenresDescending.push([genre, genresAndScores[genre]]);\r\n\r\n            topGenresDescending.sort((a, b) => b[1] - a[1])\r\n\r\n            for (let i = 0; i < topGenresDescending.length; i++) {\r\n                let genre = topGenresDescending[i][0]\r\n                topGenresDescending[i][1] = []\r\n                genresAndArtists[genre] ? topGenresDescending[i][1].push(genresAndArtists[genre]) : topGenresDescending[i][1] = [genresAndArtists[i][genre]]\r\n            }\r\n\r\n            aggregatedGenres = [...aggregatedGenres, topGenresDescending]\r\n            myDataObject['genres'] = aggregatedGenres\r\n        })\r\n        .then(() => {\r\n            fetch('https://gustavfahraeus.eu.pythonanywhere.com/hello', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': \"application/json\"\r\n                },\r\n                body: JSON.stringify(myDataObject),\r\n            })\r\n        })\r\n    let newState = []\r\n    spotifyAPI.getMyRecentlyPlayedTracks({ limit: '50' }).then(\r\n        (response) => {\r\n            for (let i = 0; i < response.body.items.length; i++) {\r\n                let trackName = response.body.items[i].track.name\r\n                let artistNames = response.body.items[i].track.artists.map((item, i) => item.name)\r\n                for (let j = 0; j < artistNames.length - 1; j++) artistNames[j] += \", \"\r\n\r\n                let timeData = response.body.items[i].played_at\r\n                let date = timeData.slice(0, 10) + ': '\r\n                let time = timeData.slice(11, 16)\r\n                newState.push([trackName, artistNames, [date, time]])\r\n            }\r\n            myDataObject['recentlyPlayed'] = newState\r\n            setter(myDataObject)\r\n        })\r\n}\r\n\r\n\r\n// 🦚🦚🦚🦚🦚🦚🦚🦚🦚🦚\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}